@using Microsoft.AspNetCore.Components.Authorization
@using LayerHub.Web.Components.Pages.Identity

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(Layout.MainLayout)">
                <NotAuthorized>
                    @if (context.User.Identity?.IsAuthenticated != true)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <div class="container mt-5">
                            <div class="alert alert-danger">
                                <h3>Access Denied</h3>
                                <p>You are not authorized to access this resource.</p>
                            </div>
                        </div>
                    }
                </NotAuthorized>
                <Authorizing>
                    <div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
                        <div class="spinner-border text-success" role="status" style="width: 3rem; height: 3rem;">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="routeData" Selector="h1"/>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="typeof(Layout.MainLayout)">
                <div class="container mt-5">
                    <div class="alert alert-warning">
                        <h3>Page Not Found</h3>
                        <p>Sorry, there's nothing at this address.</p>
                    </div>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>